{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jospa\\\\OneDrive\\\\Desktop\\\\06-proyecto2\\\\src\\\\components\\\\Crear.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Crear = () => {\n  _s();\n  const [peliState, setPeliState] = useState({\n    titulo: '',\n    descripcion: ''\n  });\n  const guardarEnStorage = peli => {\n    // 1. Obtener lo que ya hay en localStorage\n    let elementos = JSON.parse(localStorage.getItem(\"pelis\"));\n\n    // 2. Verificar si ya hay un array válido\n    if (Array.isArray(elementos)) {\n      // Añadir la nueva peli al array\n      elementos.push(peli);\n    } else {\n      // Si no existe, crear uno con esta única peli\n      elementos = [peli];\n    }\n\n    // 3. Guardar el array actualizado en localStorage\n    localStorage.setItem(\"pelis\", JSON.stringify(elementos));\n\n    // 4. Retornar la peli guardada\n    return peli;\n  };\n  const {\n    titulo,\n    descripcion\n  } = peliState;\n  const conseguirDatosForm = e => {\n    e.preventDefault();\n\n    // Conseguir los datos del formulario\n    const target = e.target;\n    const titulo = target.titulo.value;\n    const descripcion = target.descripcion.value;\n\n    // Crear objeto de película\n    const peli = {\n      id: new Date().getTime(),\n      titulo,\n      descripcion\n    };\n    setPeliState(peli);\n    guardarEnStorage(peli);\n    console.log(peli);\n    alert(titulo + \"-\" + descripcion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"A\\xF1adir pel\\xEDcula\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: titulo && descripcion && \"Has creado la película: \" + titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: conseguirDatosForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"titulo\",\n        name: \"titulo\",\n        placeholder: \"T\\xEDtulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"descripcion\",\n        name: \"descripcion\",\n        placeholder: \"Descripci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"save\",\n        value: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Crear, \"/2WIwWqq0DF20hhxSLx8JZmw2xU=\");\n_c = Crear;\nvar _c;\n$RefreshReg$(_c, \"Crear\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Crear","_s","peliState","setPeliState","titulo","descripcion","guardarEnStorage","peli","elementos","JSON","parse","localStorage","getItem","Array","isArray","push","setItem","stringify","conseguirDatosForm","e","preventDefault","target","value","id","Date","getTime","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/jospa/OneDrive/Desktop/06-proyecto2/src/components/Crear.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const Crear = () => {\r\n    const [peliState, setPeliState] = useState({\r\n        titulo: '',\r\n        descripcion: ''\r\n    });\r\n    const guardarEnStorage = (peli) => {\r\n        // 1. Obtener lo que ya hay en localStorage\r\n        let elementos = JSON.parse(localStorage.getItem(\"pelis\"));\r\n\r\n        // 2. Verificar si ya hay un array válido\r\n        if (Array.isArray(elementos)) {\r\n            // Añadir la nueva peli al array\r\n            elementos.push(peli);\r\n        } else {\r\n            // Si no existe, crear uno con esta única peli\r\n            elementos = [peli];\r\n        }\r\n\r\n        // 3. Guardar el array actualizado en localStorage\r\n        localStorage.setItem(\"pelis\", JSON.stringify(elementos));\r\n\r\n        // 4. Retornar la peli guardada\r\n        return peli;\r\n    };\r\n\r\n\r\n    const { titulo, descripcion } = peliState;\r\n\r\n    const conseguirDatosForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Conseguir los datos del formulario\r\n        const target = e.target;\r\n        const titulo = target.titulo.value;\r\n        const descripcion = target.descripcion.value;\r\n\r\n        // Crear objeto de película\r\n        const peli = {\r\n            id: new Date().getTime(),\r\n            titulo,\r\n            descripcion\r\n        };\r\n\r\n        setPeliState(peli);\r\n        guardarEnStorage(peli);\r\n        console.log(peli);\r\n\r\n        alert(titulo + \"-\" + descripcion);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"add\">\r\n            <h3 className=\"title\">Añadir película</h3>\r\n\r\n            <strong>\r\n                {(titulo && descripcion) && \"Has creado la película: \" + titulo}\r\n            </strong>\r\n\r\n            <form onSubmit={conseguirDatosForm}>\r\n                <input type=\"text\" id=\"titulo\" name=\"titulo\" placeholder=\"Título\" />\r\n                <textarea id=\"descripcion\" name=\"descripcion\" placeholder=\"Descripción\"></textarea>\r\n                <input type=\"submit\" id=\"save\" value=\"Guardar\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}